{"version":3,"sources":["components/loader/index.js","App.js","reportWebVitals.js","index.js"],"names":["containerVariants","hidden","opacity","visible","transition","delay","duration","yoyo","Infinity","Loader","props","motion","div","className","variants","initial","animate","App","useState","setLoader","useEffect","setTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0QAIMA,EAAoB,CACtBC,OAAQ,CACJC,QAAS,GAEbC,QAAS,CACLD,QAAS,EACTE,WAAY,CACRC,MAAO,EACPC,SAAU,EACVC,KAAMC,OAoBHC,MAff,SAAgBC,GACZ,OACI,cAACC,EAAA,EAAOC,IAAR,CAAYC,UAAU,SAClBC,SAAUd,EACVe,QAAQ,SACRC,QAAQ,UAHZ,SAKI,sBAAKH,UAAU,iBAAf,UACI,mBAAGA,UAAU,SAAb,oBACA,yD,MCPDI,MAff,WAAgB,IAAD,EACcC,oBAAS,GADvB,mBACCC,GADD,WAOb,OALAC,qBAAU,WACRC,YAAW,WACTF,GAAU,KACV,QAGF,mCAEA,cAAC,EAAD,OCHWG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.08609911.chunk.js","sourcesContent":["import React from 'react';\r\nimport './index.css';\r\nimport {motion} from 'framer-motion';\r\n\r\nconst containerVariants = {\r\n    hidden: {\r\n        opacity: 0\r\n    },\r\n    visible: {\r\n        opacity: 1,\r\n        transition: {\r\n            delay: 1,\r\n            duration: 2,\r\n            yoyo: Infinity\r\n        }\r\n    }\r\n}\r\n\r\nfunction Loader(props) {\r\n    return (\r\n        <motion.div className=\"loader\"\r\n            variants={containerVariants}\r\n            initial=\"hidden\"\r\n            animate=\"visible\"\r\n        >\r\n            <div className=\"loader-content\">\r\n                <p className=\"iicjec\">IICJEC</p>\r\n                <p>Events Coming Soon</p>\r\n            </div>\r\n        </motion.div>\r\n    );\r\n}\r\n\r\nexport default Loader;","import { useEffect, useState } from 'react';\nimport './App.css';\nimport Loader from './components/loader';\nimport Showcase from'./components/showcase';\n\nfunction App() {\n  const [loader,setLoader] = useState(true);\n  useEffect(()=> {\n    setTimeout(() => {\n      setLoader(false);\n    },5000);\n  })\n  return (\n    <>\n    {/* {loader ? (<Loader/>) : (<Showcase />)} */}\n    <Loader/>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}